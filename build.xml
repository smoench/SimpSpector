<?xml version="1.0" encoding="UTF-8"?>
<project name="PROJECT_NAME" default="build" basedir=".">
    <property name="project.version" value="1.0" />
    <property environment="env" />

    <property name="project.console_dir" value="bin"/>
    <property name="project.var_dir" value="var"/>
    <property name="project.phpunit.xml.dist" value="${basedir}/phpunit.xml.dist"/>

    <property name="fpm.name"         value="st-PROJECT_NAME" />
    <property name="fpm.packagename"  value="${fpm.name}" />
    <property name="fpm.version"      value="${project.version}" />
    <property name="fpm.build_dir"    value="/tmp/${fpm.packagename}" />
    <property name="fpm.maintainer"   value="YOUR NAME &lt;NAME@simplethings.de&gt;" />
    <property name="fpm.packagetype"  value="deb" />
    <property name="fpm.url"          value="http://www.simplethings.de" />
    <property name="fpm.dependencies" value="-d php5 -d php5-curl -d php5-mysql -d php5-intl -d php5-cli -d php5-mcrypt" />
    <property name="fpm.description"  value="PROJECT_DESCRIPTION" />
    <property name="fpm.postinst"     value="--post-install ${fpm.build_dir}/src/debian/postinst" />
    <property name="fpm.preinst"      value="" />
    <property name="fpm.postrm"       value="" />
    <property name="fpm.prerm"        value="" />
    <property name="fpm.architecture" value="all" />

    <fileset id="fpm.project_files" dir="${basedir}">
        <exclude name="**/.git/**"/>
        <exclude name="**/.svn/**"/>
        <exclude name="**/*.swp"/>
        <exclude name="**/*.swo"/>
        <exclude name="build/**"/>
        <exclude name="web/app_dev.php"/>
        <exclude name="app/config/parameters.yml"/>
        <exclude name="**/tests/**"/>
        <exclude name="**/Tests/**"/>
        <exclude name="**/test-suite/**"/>
        <exclude name="${project.var_dir}/logs/**" />
        <exclude name="${project.var_dir}/cache/**" />
    </fileset>

    <fileset id="fpm.public_web" dir="${fpm.build_dir}/src">
        <include name="app/**"/>
        <include name="src/**"/>
        <include name="bin/**"/>
        <include name="vendor/**"/>
        <include name="web/**"/>
    </fileset>

    <target name="clean">
        <delete dir="build"/>

        <!-- Create build directories -->
        <mkdir dir="${basedir}/build/api"/>
        <mkdir dir="${basedir}/build/coverage"/>
        <mkdir dir="${basedir}/build/logs"/>
        <mkdir dir="${basedir}/build/pdepend"/>
    </target>

    <target name="dev.prepare">
        <chmod dir="var" perm="0777" />
    </target>

    <target name="dev.finish">
        <exec executable="php">
            <arg line="${project.console_dir}/console doctrine:migrations:migrate -n -q"/>
        </exec>
    </target>

    <target name="prepare">
        <copy file="${basedir}/app/config/parameters.yml-test" tofile="${basedir}/app/config/parameters.yml" overwrite="true" />

        <exec executable="bash">
            <arg value="-c"/>
            <arg value="curl -s http://getcomposer.org/installer | php"/>
        </exec>

        <exec executable="php">
            <arg line="composer.phar install --dev"/>
        </exec>

        <exec executable="php">
            <arg line="composer.phar dump-autoload -o"/>
        </exec>

        <delete file="${basedir}/composer.phar"/>

        <exec executable="php">
            <arg line="${project.console_dir}/console cache:clear --env test"/>
        </exec>
        
        <exec executable="php">
            <!-- this is important in order for assetic:dump to work properly -->
            <arg line="${project.console_dir}/console cache:clear --env prod" />
        </exec>

        <exec executable="php">
            <arg line="${project.console_dir}/console doctrine:migrations:migrate --env test -n -q"/>
        </exec>

        <exec executable="php">
            <arg line="${project.console_dir}/console assetic:dump --env=prod"/>
        </exec>
    </target>

    <target name="phpunit">
        <exec executable="phpunit" failonerror="true" dir=".">
            <arg line="-c ${project.phpunit.xml.dist}"/>
            <arg line="--log-junit ${basedir}/build/logs/junit-result.xml"/>
        </exec>
    </target>

    <target name="pdepend" description="Calculate software metrics using PHP_Depend">
        <exec executable="pdepend">
            <arg value="--jdepend-xml=${basedir}/build/logs/jdepend.xml"/>
            <arg value="--jdepend-chart=${basedir}/build/pdepend/dependencies.svg"/>
            <arg value="--overview-pyramid=${basedir}/build/pdepend/overview-pyramid.svg"/>
            <arg path="${basedir}/src"/>
        </exec>
    </target>

    <target name="phpcs" description="Checkstyle report">
        <exec executable="phpcs" output="/dev/null">
            <arg value="--report=checkstyle" />
            <arg value="--report-file=${basedir}/build/logs/checkstyle.xml" />
            <arg value="--standard=PSR1,PSR2" />
            <arg value="--extensions=php" />
            <arg path="${basedir}/src" />
        </exec>
    </target>

    <target name="test" depends="clean,prepare,phpunit,pdepend,phpcs"/>

    <target name="build" depends="st-build-info,test,package-distribute"/>

    <target name="st-build-info">
        <tstamp>
            <format property="tstamp.NOW" pattern="yyyy-MM-dd HH:mm:ss"/>
        </tstamp>
        <echo file="${basedir}/app/config/st-build-info.yml">parameters:${line.separator}</echo>
        <echo file="${basedir}/app/config/st-build-info.yml" append="true">    st.build.number: ${env.BUILD_NUMBER}${line.separator}</echo>
        <echo file="${basedir}/app/config/st-build-info.yml" append="true">    st.build.date: ${tstamp.NOW}${line.separator}</echo>
    </target>

    <target name="package-distribute">
        <antcall target="fpm.build"/>
        <copy file="${fpm.build_dir}/${fpm.packagename}_${fpm.version}-${env.BUILD_NUMBER}.${fpm.packagetype}"
              tofile="${basedir}/build/${fpm.packagename}_${fpm.version}-${env.BUILD_NUMBER}.${fpm.packagetype}"/>
        <!-- exec executable="scp" failonerror="true">
            <arg line="-P 22 ${basedir}/build/${fpm.packagename}_${fpm.version}-${env.BUILD_NUMBER}.${fpm.packagetype} User@IpAdresse:/tmp" />
        </exec -->
    </target>

    <target name="fpm.clean">
        <delete dir="${fpm.build_dir}"/>
    </target>

    <target name="fpm.prepare" depends="fpm.clean">
        <mkdir dir="${fpm.build_dir}"/>
        <mkdir dir="${fpm.build_dir}/src"/>
        <mkdir dir="${fpm.build_dir}/build"/>

        <copy todir="${fpm.build_dir}/src">
            <fileset refid="fpm.project_files"/>
        </copy>

        <mkdir dir="${fpm.build_dir}/build/usr/share/st-applications/${fpm.packagename}"/>
        <copy todir="${fpm.build_dir}/build/usr/share/st-applications/${fpm.packagename}">
            <fileset refid="fpm.public_web"/>
        </copy>
    </target>

    <target name="fpm.build" depends="fpm.prepare">
        <exec executable="fpm">
            <arg value="-s"/>
            <arg value="dir"/>
            <arg value="-t"/>
            <arg value="${fpm.packagetype}"/>
            <arg value="-n"/>
            <arg value="${fpm.packagename}"/>
            <arg value="-v"/>
            <arg value="${fpm.version}.${env.BUILD_NUMBER}"/>
            <arg value="-m"/>
            <arg value="${fpm.maintainer}"/>
            <arg value="--url"/>
            <arg value="${fpm.url}"/>
            <arg value="--description"/>
            <arg value="${fpm.description}"/>
            <arg line="${fpm.dependencies}"/>
            <arg line="${fpm.postinst}"/>
            <arg line="${fpm.preinst}"/>
            <arg line="${fpm.postrm}"/>
            <arg line="${fpm.prerm}"/>
            <arg value="-a"/>
            <arg value="${fpm.architecture}"/>
            <arg value="-C"/>
            <arg value="${fpm.build_dir}/build/"/>
            <arg value="-p"/>
            <arg value="${fpm.build_dir}/${fpm.packagename}_${fpm.version}-${env.BUILD_NUMBER}.${fpm.packagetype}"/>
            <arg value="."/>
        </exec>
    </target>
</project>
